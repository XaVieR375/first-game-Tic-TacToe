#include <vector>
#include "ttt.hpp"

void tictactoegame()
{
	cout << "Hello, and welcome to my first Tic-Tac-Toe game!\n";
	cout << "Two players required.\n\n";
	display();
	cout << "\n";

	string playerX = "Casper the ghost";
	string pOneSymbol = "X";
	string pTwoSymbol = "'X' or 'O'";
	string currentSymbol;
	int playerPosition = 0;
	vector<string> position = { " ", " ", " ", " ", " ", " ", " ", " ", " ", " " };
	bool toggleturns = false;
	bool positionError = false;

	display(position);
	cout << "\nPlayer one, choose a letter, preferably " << "'X' or 'O': ";
	cin >> pOneSymbol;
	pOneSymbol = pOneSymbol[0];
	pOneSymbol = pOneSymbol == "x" ? "X" : pOneSymbol;	// Shorthand if pOne == "x", pOne == "X" capital X, else pOne == pOne
	pOneSymbol = pOneSymbol == "o" ? "O" : pOneSymbol;
	// If p1 chose X, p2 recomendation is O and vice versa
	pTwoSymbol = pOneSymbol == "X" ? "O" : pTwoSymbol;
	pTwoSymbol = pOneSymbol == "O" ? "X" : pTwoSymbol;
	cout << "\nPlayer two, choose a letter, preferably " << pTwoSymbol << ": ";
	cin >> pTwoSymbol;
	pTwoSymbol = pTwoSymbol[0];
	pTwoSymbol = pTwoSymbol == "x" ? "X" : pTwoSymbol;
	pTwoSymbol = pTwoSymbol == "o" ? "O" : pTwoSymbol;
	if (pTwoSymbol == pOneSymbol && pOneSymbol == "X")
	{
		cout << "Player 1 is already " << pOneSymbol << ", so player 2 will be O\n";
		pTwoSymbol = "O";
	}
	else if (pTwoSymbol == pOneSymbol && pOneSymbol == "O")
	{
		cout << "Player 1 is already " << pOneSymbol << ", so player 2 will be X\n";
		pTwoSymbol = "X";
	}

	while (position[0] == " ")
	{
		cout << "\n\n\n";

		cout << "\nPlayer 1: " << pOneSymbol << "\n";
		cout << "Player 2: " << pTwoSymbol << "\n";

		display(position);
		cout << "\n";
		if (toggleturns == false)
		{
			if (positionError == true)
			{
				cout << "Error, that position is invalid, in use, or is not a numeric number. Player 1, try again: ";
				positionError = false;
			}
			else
				cout << "Player 1, choose a position: ";
			cin >> playerPosition;
			if (!cin)
			{
				cin.clear();
				cin.ignore(numeric_limits<streamsize>::max(), '\n');

			}
			currentSymbol = pOneSymbol;

		}
		else
		{
			if (positionError == true)
			{
				cout << "Error, that position is invalid, in use, or is not a numeric number. Player 2, try again: ";
				positionError = false;
			}
			else
				cout << "Player 2, choose a position: ";
			cin >> playerPosition;
			if (!cin)
			{
				cin.clear();
				cin.ignore(numeric_limits<streamsize>::max(), '\n');

			}
			currentSymbol = pTwoSymbol;
		}


		switch (playerPosition)
		{
		case 1:
			if (position[1] == " ")
			{
				position[1] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		case 2:
			if (position[2] == " ")
			{
				position[2] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		case 3:
			if (position[3] == " ")
			{
				position[3] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		case 4:
			if (position[4] == " ")
			{
				position[4] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		case 5:
			if (position[5] == " ")
			{
				position[5] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		case 6:
			if (position[6] == " ")
			{
				position[6] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		case 7:
			if (position[7] == " ")
			{
				position[7] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		case 8:
			if (position[8] == " ")
			{
				position[8] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		case 9:
			if (position[9] == " ")
			{
				position[9] = currentSymbol;
				toggleturns = !toggleturns;
			}
			else
				positionError = true;
			break;
		default:
			cout << "Error: Invalid entry\n";
			positionError = true;
			break;
		}
		

		// If player 1 connects 3 side by side boxes
		if (position[1] == pOneSymbol && position[2] == pOneSymbol && position[3] == pOneSymbol)
		{
			position[0] = "";
			playerX = "Player 1";
		}
		if (position[4] == pOneSymbol && position[5] == pOneSymbol && position[6] == pOneSymbol)
		{
			position[0] = "";
			playerX = "Player 1";
		}
		if (position[7] == pOneSymbol && position[8] == pOneSymbol && position[9] == pOneSymbol)
		{
			position[0] = "";
			playerX = "Player 1";
		}
		if (position[1] == pOneSymbol && position[4] == pOneSymbol && position[7] == pOneSymbol)
		{
			position[0] = "";
			playerX = "Player 1";
		}
		if (position[2] == pOneSymbol && position[5] == pOneSymbol && position[8] == pOneSymbol)
		{
			position[0] = "";
			playerX = "Player 1";
		}
		if (position[3] == pOneSymbol && position[6] == pOneSymbol && position[9] == pOneSymbol)
		{
			position[0] = "";
			playerX = "Player 1";
		}
		if (position[1] == pOneSymbol && position[5] == pOneSymbol && position[9] == pOneSymbol)
		{
			position[0] = "";
			playerX = "Player 1";
		}
		if (position[3] == pOneSymbol && position[5] == pOneSymbol && position[7] == pOneSymbol)
		{
			position[0] = "";
			playerX = "Player 1";
		}

		// If player 2 connects 3 side by side boxes
		if (position[1] == pTwoSymbol && position[2] == pTwoSymbol && position[3] == pTwoSymbol)
		{
			position[0] = "";
			playerX = "Player 2";
		}
		if (position[4] == pTwoSymbol && position[5] == pTwoSymbol && position[6] == pTwoSymbol)
		{
			position[0] = "";
			playerX = "Player 2";
		}
		if (position[7] == pTwoSymbol && position[8] == pTwoSymbol && position[9] == pTwoSymbol)
		{
			position[0] = "";
			playerX = "Player 2";
		}
		if (position[1] == pTwoSymbol && position[4] == pTwoSymbol && position[7] == pTwoSymbol)
		{
			position[0] = "";
			playerX = "Player 2";
		}
		if (position[2] == pTwoSymbol && position[5] == pTwoSymbol && position[8] == pTwoSymbol)
		{
			position[0] = "";
			playerX = "Player 2";
		}
		if (position[3] == pTwoSymbol && position[6] == pTwoSymbol && position[9] == pTwoSymbol)
		{
			position[0] = "";
			playerX = "Player 2";
		}
		if (position[1] == pTwoSymbol && position[5] == pTwoSymbol && position[9] == pTwoSymbol)
		{
			position[0] = "";
			playerX = "Player 2";
		}
		if (position[3] == pTwoSymbol && position[5] == pTwoSymbol && position[7] == pTwoSymbol)
		{
			position[0] = "";
			playerX = "Player 2";
		}
		// If all positions are filled and no one won
		if (position[1] != " " && position[2] != " " && position[3] != " " && position[4] != " " && position[5] != " " && position[6] != " " && position[7] != " " && position[8] != " " && position[9] != " ")
		{
			position[0] = "";
		}
	}

	cout << "\n\n\n";

	cout << "\nPlayer 1: " << pOneSymbol << "\n";
	cout << "Player 2: " << pTwoSymbol << "\n";

	display(position);
	cout << "\n";
	cout << "Game over. " << playerX << " wins!\n";
}
